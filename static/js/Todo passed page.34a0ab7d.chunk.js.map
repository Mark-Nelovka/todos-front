{"version":3,"file":"static/js/Todo passed page.34a0ab7d.chunk.js","mappings":"qRAae,SAASA,IACtB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCC,GAAQC,EAAAA,EAAAA,IAAgBC,GAAUA,EAAMF,MAAMG,KAAKA,KAAKH,QACxDI,GAAeH,EAAAA,EAAAA,IAAeC,GAASA,EAAMF,MAAMK,QACnDC,GAAWC,EAAAA,EAAAA,MAEjBC,EAAAA,EAAAA,YAAU,KACRF,GAASG,EAAAA,EAAAA,IAAY,CAAEC,KAAM,EAAGC,YAAa,WAAY,GACxD,KAEHH,EAAAA,EAAAA,YAAU,KACLJ,EAAaQ,YACZC,IAAAA,OAAgBC,QAAQV,EAAaW,QACvC,GACD,CAACX,IAEJ,MAIMY,EAAeC,IACnB,MAAM,QAAEC,GAAYD,EAAEE,OACG,SAArBD,EAAQE,UACVtB,GAAgBD,EAClB,EAGF,OACEwB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAACE,EAAAA,EAAU,KACXL,EAAAA,EAAAA,MAAA,OAAKM,UAAU,YAAWJ,SAAA,CACzBnB,EAAaQ,YAA+B,IAAjBZ,EAAM4B,SAAgBJ,EAAAA,EAAAA,KAACK,EAAAA,QAAS,IAC3D7B,EAAM4B,OAAS,IAAKJ,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CAAC9B,MAAOA,IACrCA,EAAM4B,OAAS,IAAKJ,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CAACC,eAlBftB,IAClBJ,GAASG,EAAAA,EAAAA,IAAY,CAAEC,KAAMA,EAAMC,YAAa,WAAY,QAmB5Da,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CACHC,GAAG,aACHC,KAAK,SACLC,UAAU,OACVC,KAAMrB,EACNsB,OAAO,qBAAoBf,UAE3BC,EAAAA,EAAAA,KAAA,OAAK,gBAAc,OAAOe,IAAKC,EAAAA,EAAUC,IAAI,uCAE9C5C,IAAe2B,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CAACC,WAAY3B,MAGzC,C","sources":["pages/PassedPage.tsx"],"sourcesContent":["import TodoList from \"components/TodoList/TodoList\";\nimport Pagination from \"components/pagination/Pagination\";\nimport Notiflix from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"redux/hook\";\nimport { getAllTodos } from \"redux/todos/todosOperations\";\nimport ErrorPage from \"./ErrorPage\";\nimport Header from \"components/Header/Header\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport Button from \"ui/Button/Button\";\nimport Modal from \"components/Modal/Modal\";\nimport PlusIcon from \"assets/plus-icon.svg\";\n\nexport default function PassedPage():JSX.Element {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const todos = useAppSelector((state) => state.todos.data.data.todos);\n  const requestError = useAppSelector(state => state.todos.error);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(getAllTodos({ page: 1, currentPage: \"passed\" }));\n  }, []);\n\n  useEffect(() => {\n    if(requestError.statusCode) {\n        Notiflix.Notify.warning(requestError.message);\n      } \n  }, [requestError])  \n\n  const changePage = (page: number) => {\n    dispatch(getAllTodos({ page: page, currentPage: \"passed\" }));\n  };\n\n  const toggleModal = (e: React.MouseEvent): void => {\n    const { dataset } = e.target as HTMLDivElement;\n    if (dataset.backdrop === \"true\") {\n      setIsModalOpen(!isModalOpen);\n    }\n  };\n\n  return (\n    <>\n    <Header />\n    <Navigation />\n    <div className=\"container\">\n    {requestError.statusCode && todos.length === 0 && <ErrorPage />}\n    {todos.length > 0 && <TodoList todos={todos} /> }\n    {todos.length > 0 && <Pagination changePageFunc={changePage} />}\n    </div>\n    <Button\n        id=\"open-modal\"\n        type=\"button\"\n        dataValue=\"true\"\n        func={toggleModal}\n        styles=\"button-toggle-form\"\n      >\n        <img data-backdrop=\"true\" src={PlusIcon} alt=\"Button for open create todo form\" />\n      </Button> \n      {isModalOpen && <Modal toggleFunc={toggleModal} />}\n    </>\n  );\n}\n"],"names":["PassedPage","isModalOpen","setIsModalOpen","useState","todos","useAppSelector","state","data","requestError","error","dispatch","useAppDispatch","useEffect","getAllTodos","page","currentPage","statusCode","Notiflix","warning","message","toggleModal","e","dataset","target","backdrop","_jsxs","_Fragment","children","_jsx","Header","Navigation","className","length","ErrorPage","TodoList","Pagination","changePageFunc","Button","id","type","dataValue","func","styles","src","PlusIcon","alt","Modal","toggleFunc"],"sourceRoot":""}